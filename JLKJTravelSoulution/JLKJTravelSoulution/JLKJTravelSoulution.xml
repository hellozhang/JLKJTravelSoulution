<?xml version="1.0"?>
<doc>
    <assembly>
        <name>JLKJTravelSoulution</name>
    </assembly>
    <members>
        <member name="T:JLKJTravelSoulution.AOP.BlogCacheAOP">
            <summary>
            面向切面的缓存使用
            </summary>
        </member>
        <member name="T:JLKJTravelSoulution.AOP.BlogLogAOP">
            <summary>
            拦截器BlogLogAOP 继承IInterceptor接口
            </summary>
        </member>
        <member name="M:JLKJTravelSoulution.AOP.BlogLogAOP.Intercept(Castle.DynamicProxy.IInvocation)">
            <summary>
            实例化IInterceptor唯一方法 
            </summary>
            <param name="invocation">包含被拦截方法的信息</param>
        </member>
        <member name="T:JLKJTravelSoulution.AOP.ICaching">
            <summary>
            简单的缓存接口，只有查询和添加，以后会进行扩展
            </summary>
        </member>
        <member name="T:JLKJTravelSoulution.AOP.MemoryCaching">
            <summary>
            实例化缓存接口ICaching
            </summary>
        </member>
        <member name="M:JLKJTravelSoulution.AuthHelper.JwtHelper.IssueJWT(JLKJTravelSoulution.AuthHelper.TokenModelJWT)">
            <summary>
            颁发JWT字符串
            </summary>
            <param name="tokenModel"></param>
            <returns></returns>
        </member>
        <member name="M:JLKJTravelSoulution.AuthHelper.JwtHelper.SerializeJWT(System.String)">
            <summary>
            解析
            </summary>
            <param name="jwtStr"></param>
            <returns></returns>
        </member>
        <member name="T:JLKJTravelSoulution.AuthHelper.TokenModelJWT">
            <summary>
            令牌
            </summary>
        </member>
        <member name="P:JLKJTravelSoulution.AuthHelper.TokenModelJWT.Uid">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:JLKJTravelSoulution.AuthHelper.TokenModelJWT.Role">
            <summary>
            角色
            </summary>
        </member>
        <member name="P:JLKJTravelSoulution.AuthHelper.TokenModelJWT.Work">
            <summary>
            职能
            </summary>
        </member>
        <member name="T:JLKJTravelSoulution.AuthHelper.JwtTokenAuth">
            <summary>
            
            </summary>
        </member>
        <member name="F:JLKJTravelSoulution.AuthHelper.JwtTokenAuth._next">
            <summary>
            
            </summary>
        </member>
        <member name="M:JLKJTravelSoulution.AuthHelper.JwtTokenAuth.#ctor(Microsoft.AspNetCore.Http.RequestDelegate)">
            <summary>
            
            </summary>
            <param name="next"></param>
        </member>
        <member name="M:JLKJTravelSoulution.AuthHelper.JwtTokenAuth.Invoke(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            
            </summary>
            <param name="httpContext"></param>
            <returns></returns>
        </member>
        <member name="T:JLKJTravelSoulution.AuthHelper.JwtToken">
            <summary>
            JWTToken生成类
            </summary>
        </member>
        <member name="M:JLKJTravelSoulution.AuthHelper.JwtToken.BuildJwtToken(System.Security.Claims.Claim[],JLKJTravelSoulution.AuthHelper.PermissionRequirement)">
            <summary>
            获取基于JWT的Token
            </summary>
            <param name="claims">需要在登陆的时候配置</param>
            <param name="permissionRequirement">在startup中定义的参数</param>
            <returns></returns>
        </member>
        <member name="T:JLKJTravelSoulution.AuthHelper.Permission">
            <summary>
            用户或角色或其他凭据实体
            </summary>
        </member>
        <member name="P:JLKJTravelSoulution.AuthHelper.Permission.Role">
            <summary>
            用户或角色或其他凭据名称
            </summary>
        </member>
        <member name="P:JLKJTravelSoulution.AuthHelper.Permission.Url">
            <summary>
            请求Url
            </summary>
        </member>
        <member name="T:JLKJTravelSoulution.AuthHelper.PermissionHandler">
            <summary>
            权限授权处理器
            </summary>
        </member>
        <member name="P:JLKJTravelSoulution.AuthHelper.PermissionHandler.Schemes">
            <summary>
            验证方案提供对象
            </summary>
        </member>
        <member name="P:JLKJTravelSoulution.AuthHelper.PermissionHandler._roleModulePermissionServices">
            <summary>
            services 层注入
            </summary>
        </member>
        <member name="M:JLKJTravelSoulution.AuthHelper.PermissionHandler.#ctor(Microsoft.AspNetCore.Authentication.IAuthenticationSchemeProvider,JLKJTravelSoulution.IServices.IRoleModulePermissionServices)">
            <summary>
            构造函数注入
            </summary>
            <param name="schemes"></param>
            <param name="roleModulePermissionServices"></param>
        </member>
        <member name="T:JLKJTravelSoulution.AuthHelper.PermissionRequirement">
            <summary>
            必要参数类，
            继承 IAuthorizationRequirement，用于设计自定义权限处理器PermissionHandler
            因为AuthorizationHandler 中的泛型参数 TRequirement 必须继承 IAuthorizationRequirement
            </summary>
        </member>
        <member name="P:JLKJTravelSoulution.AuthHelper.PermissionRequirement.Permissions">
            <summary>
            用户权限集合
            </summary>
        </member>
        <member name="P:JLKJTravelSoulution.AuthHelper.PermissionRequirement.DeniedAction">
            <summary>
            无权限action
            </summary>
        </member>
        <member name="P:JLKJTravelSoulution.AuthHelper.PermissionRequirement.ClaimType">
            <summary>
            认证授权类型
            </summary>
        </member>
        <member name="P:JLKJTravelSoulution.AuthHelper.PermissionRequirement.LoginPath">
            <summary>
            请求路径
            </summary>
        </member>
        <member name="P:JLKJTravelSoulution.AuthHelper.PermissionRequirement.Issuer">
            <summary>
            发行人
            </summary>
        </member>
        <member name="P:JLKJTravelSoulution.AuthHelper.PermissionRequirement.Audience">
            <summary>
            订阅人
            </summary>
        </member>
        <member name="P:JLKJTravelSoulution.AuthHelper.PermissionRequirement.Expiration">
            <summary>
            过期时间
            </summary>
        </member>
        <member name="P:JLKJTravelSoulution.AuthHelper.PermissionRequirement.SigningCredentials">
            <summary>
            签名验证
            </summary>
        </member>
        <member name="M:JLKJTravelSoulution.AuthHelper.PermissionRequirement.#ctor(System.String,System.Collections.Generic.List{JLKJTravelSoulution.AuthHelper.Permission},System.String,System.String,System.String,Microsoft.IdentityModel.Tokens.SigningCredentials,System.TimeSpan)">
            <summary>
            构造
            </summary>
            <param name="deniedAction">拒约请求的url</param>
            <param name="permissions">权限集合</param>
            <param name="claimType">声明类型</param>
            <param name="issuer">发行人</param>
            <param name="audience">订阅人</param>
            <param name="signingCredentials">签名验证实体</param>
            <param name="expiration">过期时间</param>
        </member>
        <member name="M:JLKJTravelSoulution.AutoMapper.CustomProfile.#ctor">
            <summary>
            配置构造函数，用来创建关系映射
            </summary>
        </member>
        <member name="T:JLKJTravelSoulution.Controllers.LoginController">
            <summary>
            
            </summary>
        </member>
        <member name="M:JLKJTravelSoulution.Controllers.LoginController.#ctor(JLKJTravelSoulution.IServices.IsysUserInfoServices,JLKJTravelSoulution.IServices.IUserRoleServices,JLKJTravelSoulution.IServices.IRoleServices,JLKJTravelSoulution.AuthHelper.PermissionRequirement)">
            <summary>
            构造函数注入
            </summary>
            <param name="sysUserInfoServices"></param>
            <param name="userRoleServices"></param>
            <param name="roleServices"></param>
            <param name="requirement"></param>
        </member>
        <member name="M:JLKJTravelSoulution.Controllers.LoginController.GetJWTStr(System.String,System.String)">
            <summary>
            获取JWT的方法
            </summary>
            <param name="id">id</param>
            <param name="sub">角色</param>
            <returns></returns>
        </member>
        <member name="M:JLKJTravelSoulution.Controllers.LoginController.GetJWTToken3(System.String,System.String)">
            <summary>
            获取JWT的方法 3.0
            </summary>
            <param name="name"></param>
            <param name="pass"></param>
            <returns></returns>
        </member>
        <member name="M:JLKJTravelSoulution.Controllers.LoginController.Getjsonp(System.String,System.Int64,System.String,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="id"></param>
            <param name="sub"></param>
            <param name="expiresSliding"></param>
            <param name="expiresAbsoulute"></param>
            <returns></returns>
        </member>
        <member name="T:JLKJTravelSoulution.Controllers.UserRoleController">
            <summary>
            用户权限控制器所有接口
            </summary>
        </member>
        <member name="M:JLKJTravelSoulution.Controllers.UserRoleController.#ctor(JLKJTravelSoulution.IServices.IsysUserInfoServices,JLKJTravelSoulution.IServices.IUserRoleServices,JLKJTravelSoulution.IServices.IRoleServices)">
            <summary>
            构造函数
            </summary>
            <param name="sysUserInfoServices"></param>
            <param name="userRoleServices"></param>
            <param name="roleServices"></param>
        </member>
        <member name="M:JLKJTravelSoulution.Controllers.UserRoleController.AddUser(System.String,System.String)">
            <summary>
            新建用户
            </summary>
            <param name="loginName"></param>
            <param name="loginPWD"></param>
            <returns></returns>
        </member>
        <member name="M:JLKJTravelSoulution.Controllers.UserRoleController.AddRole(System.String)">
            <summary>
            新建Role
            </summary>
            <param name="roleName"></param>
            <returns></returns>
        </member>
        <member name="M:JLKJTravelSoulution.Controllers.UserRoleController.AddUserRole(System.Int32,System.Int32)">
            <summary>
            新建用户角色关系
            </summary>
            <param name="uid"></param>
            <param name="rid"></param>
            <returns></returns>
        </member>
        <member name="T:JLKJTravelSoulution.Controllers.ValuesController">
            <summary>
            Values控制器
            </summary>
        </member>
        <member name="M:JLKJTravelSoulution.Controllers.ValuesController.Get">
            <summary>
            Get方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:JLKJTravelSoulution.Controllers.ValuesController.Get(System.Int32)">
            <summary>
            Get(int id)方法
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:JLKJTravelSoulution.Controllers.ValuesController.Post(JLKJTravelSoulution.Model.Models.BlogArticle)">
            <summary>
            post
            </summary>
            <param name="blogArticle">model实体类参数</param>
        </member>
        <member name="M:JLKJTravelSoulution.Controllers.ValuesController.Put(System.Int32,System.String)">
            <summary>
            Put方法
            </summary>
            <param name="id"></param>
            <param name="value"></param>
        </member>
        <member name="M:JLKJTravelSoulution.Controllers.ValuesController.Delete(System.Int32)">
            <summary>
            Delete方法
            </summary>
            <param name="id"></param>
        </member>
        <member name="T:JLKJTravelSoulution.Filter.GlobalExceptionsFilter">
            <summary>
            全局异常错误日志
            </summary>
        </member>
        <member name="M:JLKJTravelSoulution.Filter.GlobalExceptionsFilter.WriteLog(System.String,System.Exception)">
            <summary>
            自定义返回格式
            </summary>
            <param name="throwMsg"></param>
            <param name="ex"></param>
            <returns></returns>
        </member>
        <member name="P:JLKJTravelSoulution.Filter.JsonErrorResponse.Message">
            <summary>
            生产环境的消息
            </summary>
        </member>
        <member name="P:JLKJTravelSoulution.Filter.JsonErrorResponse.DevelopmentMessage">
            <summary>
            开发环境的消息
            </summary>
        </member>
        <member name="T:JLKJTravelSoulution.Log.ILoggerHelper">
            <summary>
            日志接口
            </summary>
        </member>
        <member name="M:JLKJTravelSoulution.Log.ILoggerHelper.Debug(System.Object,System.String)">
            <summary>
            调试信息
            </summary>
            <param name="source">source</param>
            <param name="message">message</param>
        </member>
        <member name="M:JLKJTravelSoulution.Log.ILoggerHelper.Debug(System.Object,System.String,System.Object[])">
            <summary>
            调试信息
            </summary>
            <param name="source">source</param>
            <param name="message">message</param>
            <param name="ps">ps</param>
        </member>
        <member name="M:JLKJTravelSoulution.Log.ILoggerHelper.Debug(System.Type,System.String)">
            <summary>
            调试信息
            </summary>
            <param name="source">source</param>
            <param name="message">message</param>
        </member>
        <member name="M:JLKJTravelSoulution.Log.ILoggerHelper.Info(System.Object,System.Object)">
            <summary>
            关键信息
            </summary>
            <param name="source">source</param>
            <param name="message">message</param>
        </member>
        <member name="M:JLKJTravelSoulution.Log.ILoggerHelper.Info(System.Type,System.Object)">
            <summary>
            关键信息
            </summary>
            <param name="source">source</param>
            <param name="message">message</param>
        </member>
        <member name="M:JLKJTravelSoulution.Log.ILoggerHelper.Warn(System.Object,System.Object)">
            <summary>
            警告信息
            </summary>
            <param name="source">source</param>
            <param name="message">message</param>
        </member>
        <member name="M:JLKJTravelSoulution.Log.ILoggerHelper.Warn(System.Type,System.Object)">
            <summary>
            警告信息
            </summary>
            <param name="source">source</param>
            <param name="message">message</param>
        </member>
        <member name="M:JLKJTravelSoulution.Log.ILoggerHelper.Error(System.Object,System.Object)">
            <summary>
            错误信息
            </summary>
            <param name="source">source</param>
            <param name="message">message</param>
        </member>
        <member name="M:JLKJTravelSoulution.Log.ILoggerHelper.Error(System.Type,System.Object)">
            <summary>
            错误信息
            </summary>
            <param name="source">source</param>
            <param name="message">message</param>
        </member>
        <member name="M:JLKJTravelSoulution.Log.ILoggerHelper.Fatal(System.Object,System.Object)">
            <summary>
            失败信息
            </summary>
            <param name="source">source</param>
            <param name="message">message</param>
        </member>
        <member name="M:JLKJTravelSoulution.Log.ILoggerHelper.Fatal(System.Type,System.Object)">
            <summary>
            失败信息
            </summary>
            <param name="source">source</param>
            <param name="message">message</param>
        </member>
        <member name="M:JLKJTravelSoulution.Log.ILoggerHelper.Debug(System.Object,System.Object,System.Exception)">
            <summary>
            调试信息
            </summary>
            <param name="source">source</param>
            <param name="message">message</param>
            <param name="exception">ex</param>
        </member>
        <member name="M:JLKJTravelSoulution.Log.ILoggerHelper.Debug(System.Type,System.Object,System.Exception)">
            <summary>
            调试信息
            </summary>
            <param name="source">source</param>
            <param name="message">message</param>
            <param name="exception">ex</param>
        </member>
        <member name="M:JLKJTravelSoulution.Log.ILoggerHelper.Info(System.Object,System.Object,System.Exception)">
            <summary>
            关键信息
            </summary>
            <param name="source">source</param>
            <param name="message">message</param>
            <param name="exception">ex</param>
        </member>
        <member name="M:JLKJTravelSoulution.Log.ILoggerHelper.Info(System.Type,System.Object,System.Exception)">
            <summary>
            关键信息
            </summary>
            <param name="source">source</param>
            <param name="message">message</param>
            <param name="exception">ex</param>
        </member>
        <member name="M:JLKJTravelSoulution.Log.ILoggerHelper.Warn(System.Object,System.Object,System.Exception)">
            <summary>
            警告信息
            </summary>
            <param name="source">source</param>
            <param name="message">message</param>
            <param name="exception">ex</param>
        </member>
        <member name="M:JLKJTravelSoulution.Log.ILoggerHelper.Warn(System.Type,System.Object,System.Exception)">
            <summary>
            警告信息
            </summary>
            <param name="source">source</param>
            <param name="message">message</param>
            <param name="exception">ex</param>
        </member>
        <member name="M:JLKJTravelSoulution.Log.ILoggerHelper.Error(System.Object,System.Object,System.Exception)">
            <summary>
            错误信息
            </summary>
            <param name="source">source</param>
            <param name="message">message</param>
            <param name="exception">ex</param>
        </member>
        <member name="M:JLKJTravelSoulution.Log.ILoggerHelper.Error(System.Type,System.Object,System.Exception)">
            <summary>
            错误信息
            </summary>
            <param name="source">source</param>
            <param name="message">message</param>
            <param name="exception">ex</param>
        </member>
        <member name="M:JLKJTravelSoulution.Log.ILoggerHelper.Fatal(System.Object,System.Object,System.Exception)">
            <summary>
            失败信息
            </summary>
            <param name="source">source</param>
            <param name="message">message</param>
            <param name="exception">ex</param>
        </member>
        <member name="M:JLKJTravelSoulution.Log.ILoggerHelper.Fatal(System.Type,System.Object,System.Exception)">
            <summary>
            失败信息
            </summary>
            <param name="source">source</param>
            <param name="message">message</param>
            <param name="exception">ex</param>
        </member>
        <member name="T:JLKJTravelSoulution.Log.LogHelper">
            <summary>
            
            </summary>
        </member>
        <member name="M:JLKJTravelSoulution.Log.LogHelper.GetLogger(System.Type)">
            <summary>
            获取记录器
            </summary>
            <param name="source">soruce</param>
            <returns></returns>
        </member>
        <member name="M:JLKJTravelSoulution.Log.LogHelper.Debug(System.Object,System.String)">
            <summary>
            调试信息
            </summary>
            <param name="source">source</param>
            <param name="message">message</param>
        </member>
        <member name="M:JLKJTravelSoulution.Log.LogHelper.Debug(System.Object,System.String,System.Object[])">
            <summary>
            调试信息
            </summary>
            <param name="source">source</param>
            <param name="message">message</param>
            <param name="ps">ps</param>
        </member>
        <member name="M:JLKJTravelSoulution.Log.LogHelper.Debug(System.Type,System.String)">
            <summary>
            调试信息
            </summary>
            <param name="source">source</param>
            <param name="message">message</param>
        </member>
        <member name="M:JLKJTravelSoulution.Log.LogHelper.Info(System.Object,System.Object)">
            <summary>
            关键信息
            </summary>
            <param name="source">source</param>
            <param name="message">message</param>
        </member>
        <member name="M:JLKJTravelSoulution.Log.LogHelper.Info(System.Type,System.Object)">
            <summary>
            关键信息
            </summary>
            <param name="source">source</param>
            <param name="message">message</param>
        </member>
        <member name="M:JLKJTravelSoulution.Log.LogHelper.Warn(System.Object,System.Object)">
            <summary>
            警告信息
            </summary>
            <param name="source">source</param>
            <param name="message">message</param>
        </member>
        <member name="M:JLKJTravelSoulution.Log.LogHelper.Warn(System.Type,System.Object)">
            <summary>
            警告信息
            </summary>
            <param name="source">source</param>
            <param name="message">message</param>
        </member>
        <member name="M:JLKJTravelSoulution.Log.LogHelper.Error(System.Object,System.Object)">
            <summary>
            错误信息
            </summary>
            <param name="source">source</param>
            <param name="message">message</param>
        </member>
        <member name="M:JLKJTravelSoulution.Log.LogHelper.Error(System.Type,System.Object)">
            <summary>
            错误信息
            </summary>
            <param name="source">source</param>
            <param name="message">message</param>
        </member>
        <member name="M:JLKJTravelSoulution.Log.LogHelper.Fatal(System.Object,System.Object)">
            <summary>
            失败信息
            </summary>
            <param name="source">source</param>
            <param name="message">message</param>
        </member>
        <member name="M:JLKJTravelSoulution.Log.LogHelper.Fatal(System.Type,System.Object)">
            <summary>
            失败信息
            </summary>
            <param name="source">source</param>
            <param name="message">message</param>
        </member>
        <member name="M:JLKJTravelSoulution.Log.LogHelper.Debug(System.Object,System.Object,System.Exception)">
            <summary>
            调试信息
            </summary>
            <param name="source">source</param>
            <param name="message">message</param>
            <param name="exception">ex</param>
        </member>
        <member name="M:JLKJTravelSoulution.Log.LogHelper.Debug(System.Type,System.Object,System.Exception)">
            <summary>
            调试信息
            </summary>
            <param name="source">source</param>
            <param name="message">message</param>
            <param name="exception">ex</param>
        </member>
        <member name="M:JLKJTravelSoulution.Log.LogHelper.Info(System.Object,System.Object,System.Exception)">
            <summary>
            关键信息
            </summary>
            <param name="source">source</param>
            <param name="message">message</param>
            <param name="exception">ex</param>
        </member>
        <member name="M:JLKJTravelSoulution.Log.LogHelper.Info(System.Type,System.Object,System.Exception)">
            <summary>
            关键信息
            </summary>
            <param name="source">source</param>
            <param name="message">message</param>
            <param name="exception">ex</param>
        </member>
        <member name="M:JLKJTravelSoulution.Log.LogHelper.Warn(System.Object,System.Object,System.Exception)">
            <summary>
            警告信息
            </summary>
            <param name="source">source</param>
            <param name="message">message</param>
            <param name="exception">ex</param>
        </member>
        <member name="M:JLKJTravelSoulution.Log.LogHelper.Warn(System.Type,System.Object,System.Exception)">
            <summary>
            警告信息
            </summary>
            <param name="source">source</param>
            <param name="message">message</param>
            <param name="exception">ex</param>
        </member>
        <member name="M:JLKJTravelSoulution.Log.LogHelper.Error(System.Object,System.Object,System.Exception)">
            <summary>
            错误信息
            </summary>
            <param name="source">source</param>
            <param name="message">message</param>
            <param name="exception">ex</param>
        </member>
        <member name="M:JLKJTravelSoulution.Log.LogHelper.Error(System.Type,System.Object,System.Exception)">
            <summary>
            错误信息
            </summary>
            <param name="source">source</param>
            <param name="message">message</param>
            <param name="exception">ex</param>
        </member>
        <member name="M:JLKJTravelSoulution.Log.LogHelper.Fatal(System.Object,System.Object,System.Exception)">
            <summary>
            失败信息
            </summary>
            <param name="source">source</param>
            <param name="message">message</param>
            <param name="exception">ex</param>
        </member>
        <member name="M:JLKJTravelSoulution.Log.LogHelper.Fatal(System.Type,System.Object,System.Exception)">
            <summary>
            失败信息
            </summary>
            <param name="source">source</param>
            <param name="message">message</param>
            <param name="exception">ex</param>
        </member>
        <member name="P:JLKJTravelSoulution.Startup.repository">
            <summary>
            log4net 仓储库
            </summary>
        </member>
        <member name="T:JLKJTravelSoulution.SwaggerHelper.CustomApiVersion">
            <summary>
            自定义版本
            </summary>
        </member>
        <member name="T:JLKJTravelSoulution.SwaggerHelper.CustomApiVersion.ApiVersions">
            <summary>
            Api接口版本 自定义
            </summary>
        </member>
        <member name="F:JLKJTravelSoulution.SwaggerHelper.CustomApiVersion.ApiVersions.v1">
            <summary>
            v1 版本
            </summary>
        </member>
        <member name="F:JLKJTravelSoulution.SwaggerHelper.CustomApiVersion.ApiVersions.v2">
            <summary>
            v2 版本
            </summary>
        </member>
        <member name="T:JLKJTravelSoulution.SwaggerHelper.CustomRouteAttribute">
            <summary>
            自定义路由 /api/{version}/[controler]/[action]
            </summary>
        </member>
        <member name="P:JLKJTravelSoulution.SwaggerHelper.CustomRouteAttribute.GroupName">
            <summary>
            分组名称,是来实现接口 IApiDescriptionGroupNameProvider
            </summary>
        </member>
        <member name="M:JLKJTravelSoulution.SwaggerHelper.CustomRouteAttribute.#ctor(System.String)">
            <summary>
            自定义路由构造函数，继承基类路由
            </summary>
            <param name="actionName"></param>
        </member>
        <member name="M:JLKJTravelSoulution.SwaggerHelper.CustomRouteAttribute.#ctor(JLKJTravelSoulution.SwaggerHelper.CustomApiVersion.ApiVersions,System.String)">
            <summary>
            自定义版本+路由构造函数，继承基类路由
            </summary>
            <param name="actionName"></param>
            <param name="version"></param>
        </member>
    </members>
</doc>
